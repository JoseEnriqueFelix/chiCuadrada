{"version":3,"sources":["../node_modules/@kurkle/color/dist/color.esm.js","../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.ts","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.ts","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js","../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts","../node_modules/chart.js/auto/auto.js","pruebasEstadisticas.js","../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["round","v","lim","l","h","Math","max","min","exports","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","len","length","ret","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","console","warn","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","animator","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","_length","curr","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","require","_exportNames","_default","default","_auto","_interopRequireDefault","__esModule","_typeof","iterator","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","err","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","test","arr2","generaTablaAleatoria","randoms","random","generaIntervalos","inter","chiCuadrada","intervalos","suma","_callee","valoresAleatorios","_i2","_i3","_callee$","prompt","log","valoresO","toFixed","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","overlay","createErrorOverlay","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps"],"mappings":"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","file":"pruebasEstadisticas.bdaff4f7.js","sourceRoot":"..\\src","sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import Chart from 'chart.js/auto'\r\n\r\nfunction generaTablaAleatoria(n){\r\n    let randoms=[]\r\n    for (let i=0; i<n; i++){\r\n        randoms.push(Math.random())\r\n    }\r\n    return randoms\r\n}\r\n\r\nfunction generaIntervalos(arr, w, k){\r\n    let inter=[]\r\n    inter.push(Math.min(...arr) + w)\r\n    for(let i=1; i<k; i++){\r\n        inter.push(inter[i-1] + w)\r\n    }\r\n    return inter\r\n}\r\n\r\nfunction chiCuadrada(intervalos, randoms, k, e){\r\n    let a=0\r\n    let suma=0\r\n    let o=Array(k).fill(0)\r\n    for(let i=0; i<randoms.length; i++){\r\n        if(randoms[i]>=Math.min(...randoms) && randoms[i]<intervalos[0]){\r\n            o[0]++\r\n        }\r\n    }\r\n    suma += Math.pow((o[0] - e), 2) / e\r\n    for(let i=1; i<intervalos.length; i++){\r\n        for(let j=0; j<randoms.length; j++){\r\n            if(randoms[j]>=intervalos[i-1] && randoms[j]<intervalos[i]){\r\n                o[i]++\r\n            }\r\n        }\r\n        suma += Math.pow((o[i] - e), 2) / e\r\n        a=i\r\n    }\r\n    o[a+1]=suma\r\n    return o\r\n}\r\n\r\n\r\n(async function() {\r\n  let precision=2\r\n  let n=prompt(\"Ingrese el valor de n\")\r\n  let k=parseInt(Math.sqrt(n))\r\n  let e=n/k\r\n  let valoresAleatorios=generaTablaAleatoria(n)\r\n  for(let i=0; i<valoresAleatorios.length; i++){\r\n    console.log((i + 1) + \"\\t\\t\" + valoresAleatorios[i])\r\n  }\r\n  let r=Math.max(...valoresAleatorios) - Math.min(...valoresAleatorios)\r\n  let w=r/k\r\n  let intervalos = []\r\n  intervalos=generaIntervalos(valoresAleatorios, w, k)\r\n  window.valoresO=[]\r\n  valoresO=chiCuadrada(intervalos, valoresAleatorios, k, e)\r\n  console.log(\"i\" + \"\\t\\t\" + \"O\" + \"\\t\\t\\t\" + \"E\" + \"\\t\\t\\t\" + \"(O-E)\" + \"\\t\\t\\t\" + \"((O-E)^2)/E\")\r\n  for(let i=0; i<valoresO.length-1; i++){\r\n    console.log((i+1) + \"\\t\\t\" + valoresO[i] + \"\\t\\t\\t\" + e.toFixed(precision) + \"\\t\\t\" + (valoresO[i]-e).toFixed(precision) + \"\\t\\t\\t\" + (Math.pow((valoresO[i] - e), 2) / e).toFixed(precision))\r\n  }\r\n  console.log(\"La suma es: \" + valoresO[valoresO.length-1])\r\n  \r\n  let data = []\r\n\r\n  for (let i = 0; i < valoresO.length-1; i++) {\r\n    let obj = { year: i+1, count: valoresO[i] }\r\n    data.push(obj)\r\n  }\r\n\r\n  new Chart(\r\n    document.getElementById('acquisitions'),\r\n    {\r\n      type: 'bar',\r\n      data: {\r\n        labels: data.map(row => row.year),\r\n        datasets: [\r\n          {\r\n            label: 'Chi cuadrada',\r\n            data: data.map(row => row.count)\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  );\r\n})();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}